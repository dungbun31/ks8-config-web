replicaCount: 1

image:
  registry: docker.io
  repository: dungxbuns/vdt-lab-backend
  pullPolicy: IfNotPresent
  tag: "v7"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: "NodePort"
  nodePort: 30012
  port: 6868

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: 80
# readinessProbe:
#   httpGet:
#     path: /
#     port: 8080

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

secrets:
  name: api-secrets
  type: Opaque
  data:
    DB_USER: cG9zdGdyZXM=
    DB_PASS: YnVu
    DB_NAME: c3R1ZGVudHM=
    DB_HOST: ZGI=
    DB_PORT: NTQzMg==

postgresql:
  enabled: true
  image:
    registry: docker.io
    repository: postgres
    tag: latest
  service:
    port: 5432
  resources: {}
  env:
    - name: POSTGRES_USER
      valueFrom:
        secretKeyRef:
          name: api-secrets
          key: DB_USER
    - name: POSTGRES_PASSWORD
      valueFrom:
        secretKeyRef:
          name: api-secrets
          key: DB_PASS
    - name: POSTGRES_DB
      valueFrom:
        secretKeyRef:
          name: api-secrets
          key: DB_NAME
